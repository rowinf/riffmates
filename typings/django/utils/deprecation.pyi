"""
This type stub file was generated by pyright.
"""

class RemovedInDjango50Warning(DeprecationWarning):
    ...


class RemovedInDjango51Warning(PendingDeprecationWarning):
    ...


RemovedInNextVersionWarning = RemovedInDjango50Warning
RemovedAfterNextVersionWarning = RemovedInDjango51Warning
class warn_about_renamed_method:
    def __init__(self, class_name, old_method_name, new_method_name, deprecation_warning) -> None:
        ...
    
    def __call__(self, f): # -> Callable[..., Any]:
        ...
    


class RenameMethodsBase(type):
    """
    Handles the deprecation paths when renaming a method.

    It does the following:
        1) Define the new method if missing and complain about it.
        2) Define the old method if missing.
        3) Complain whenever an old method is called.

    See #15363 for more details.
    """
    renamed_methods = ...
    def __new__(cls, name, bases, attrs): # -> Self:
        ...
    


class DeprecationInstanceCheck(type):
    def __instancecheck__(self, instance): # -> bool:
        ...
    


class MiddlewareMixin:
    sync_capable = ...
    async_capable = ...
    def __init__(self, get_response) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __call__(self, request): # -> Coroutine[Any, Any, Any]:
        ...
    
    async def __acall__(self, request):
        """
        Async version of __call__ that is swapped in when an async request
        is running.
        """
        ...
    


