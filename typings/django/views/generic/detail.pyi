"""
This type stub file was generated by pyright.
"""

from django.views.generic.base import ContextMixin, TemplateResponseMixin, View

class SingleObjectMixin(ContextMixin):
    """
    Provide the ability to retrieve a single object for further manipulation.
    """
    model = ...
    queryset = ...
    slug_field = ...
    context_object_name = ...
    slug_url_kwarg = ...
    pk_url_kwarg = ...
    query_pk_and_slug = ...
    def get_object(self, queryset=...):
        """
        Return the object the view is displaying.

        Require `self.queryset` and a `pk` or `slug` argument in the URLconf.
        Subclasses can override this to return any object.
        """
        ...
    
    def get_queryset(self):
        """
        Return the `QuerySet` that will be used to look up the object.

        This method is called by the default implementation of get_object() and
        may not be called if get_object() is overridden.
        """
        ...
    
    def get_slug_field(self): # -> str:
        """Get the name of a slug field to be used to look up by slug."""
        ...
    
    def get_context_object_name(self, obj): # -> None:
        """Get the name to use for the object."""
        ...
    
    def get_context_data(self, **kwargs): # -> dict[str, Any]:
        """Insert the single object into the context dict."""
        ...
    


class BaseDetailView(SingleObjectMixin, View):
    """A base view for displaying a single object."""
    def get(self, request, *args, **kwargs):
        ...
    


class SingleObjectTemplateResponseMixin(TemplateResponseMixin):
    template_name_field = ...
    template_name_suffix = ...
    def get_template_names(self): # -> list[Never]:
        """
        Return a list of template names to be used for the request. May not be
        called if render_to_response() is overridden. Return the following list:

        * the value of ``template_name`` on the view (if provided)
        * the contents of the ``template_name_field`` field on the
          object instance that the view is operating upon (if available)
        * ``<app_label>/<model_name><template_name_suffix>.html``
        """
        ...
    


class DetailView(SingleObjectTemplateResponseMixin, BaseDetailView):
    """
    Render a "detail" view of an object.

    By default this is a model instance looked up from `self.queryset`, but the
    view will support display of *any* object by overriding `self.get_object()`.
    """
    ...


